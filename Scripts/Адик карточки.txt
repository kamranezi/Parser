import pandas as pd
from bs4 import BeautifulSoup
from selenium import webdriver
from selenium.webdriver.chrome.service import Service as ChromeService
from selenium.webdriver.chrome.options import Options

# Ваш новый список ID
ids = ["IE3286",
    "IE3285", "IE3284", "ID4821", "ID1828", "IE2769", "GV9073", "IE5486",
    "GV9068", "IE5487", "GV9091", "IE6871", "IG9908", "IG9514", "IG9515",
    "IG5716", "IG5714", "IF2984", "IF0444", "IF0435", "ID1565", "ID1564",
    "ID1563", "ID1561", "IG2317", "IF9911", "IF9944", "ID1667", "IF9945",
    "IG2312", "IF5114", "IF9950", "IG2321", "IF9942", "IF5125", "IG2313",
    "IG9598", "ID1668", "IG2316", "IF9943", "IF9912", "IG2314", "IG2315",
    "IG9625", "IF9947", "IG2311", "IG2327", "IG2326"]


def get_adidas_product_details(url):
    service = ChromeService(executable_path='C:/Users/Maibenben/PycharmProjects/chromedriver-win64/chromedriver.exe')
    options = Options()
    options.headless = True
    driver = webdriver.Chrome(service=service, options=options)

    try:
        driver.get(url)
        soup = BeautifulSoup(driver.page_source, 'html.parser')

        images = [img['src'] for img in
                  soup.select('#pdp-gallery-desktop-grid-container .view-cell-container___aqB7e .content___3m-ue img')]
        description_container = soup.find(class_='description___29WFI')
        if description_container:
            description = description_container.find(class_='text-content___13aRm').text
        else:
            description = "Описание не найдено"

        price_element = soup.find(class_='gl-price-item notranslate')
        if price_element:
            price = price_element.text
        else:
            price = "Цена не найдена"

        sizes = [span.text for span in soup.select('.sizes___2jQjF .gl-label span')]
        unavailable_sizes = [span.text for span in soup.select('.gl-label.size___2lbev.size-selector__size--unavailable___1EibR.size-selector__size--unavailable-crossed___3zV2f')]
        color_images = [img['src'] for img in soup.select('.color-chooser-grid___1ZBx_ img')]
        color_links = [link['href'] for link in soup.select('.color-chooser-grid___1ZBx_ .variation___tBgJN')]

        return {
            'images': images,
            'description': description,
            'price': price,
            'sizes': sizes,
            'unavailable_sizes': unavailable_sizes,
            'color_images': color_images,
            'color_links': color_links

        }
    finally:
        driver.quit()


# Создадим пустой DataFrame для сохранения данных
data = {
    'images': [],
    'description': [],
    'price': [],
    'sizes': [],
    'unavailable_sizes': [],  # Добавляем новое поле для недоступных размеров
    'color_images': [],
    'color_links': []
}

for id in ids:
    url = f'https://www.adidas.com/us/men-adizero-shoes/{id}.html'
    product_details = get_adidas_product_details(url)

    # Добавляем данные в DataFrame
    for key, value in product_details.items():
        data[key].append(value)

# Создаем DataFrame
df = pd.DataFrame(data)

# Сохраняем в Excel
df.to_excel('detailadizero2.xlsx', index=False)

